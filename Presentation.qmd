---
title: "Assignment1"
author: "ingrid_og_emilie"
format: 
  revealjs:
        theme: simple
        reveal_options: 
        code_fold: show
        incremnetal: true
        smaller: true
        scollable: true
        slide-number: c/t
editor: visual
editor_options:
  markdown:
    wrap: 72
    canonical: true
    chunk_output_type: console
language: nb.yaml
echo: true
eval: true
bibliography: [ds-h23.bib, My_Bib.bib]
---

## Hvordan kan **renv** hjelpe oss med å oppnå reproduserbarhet?

::: incremental
-   Hva er forskjellen på **renv** og **checkpoint** ?
:::

. . .

## Hva er reproduserbarhet?

::: incremental
-   Evnen til å gjenskape nøyaktig samme resultat
-   Reproduserbarhet er viktig for:
    -   Feilretting
    -   Testing og validering
    -   Vitenskaplig forskning
    -   Porsjektstyring
-   Flere måter å oppnå reproduserbarhet -\> Renv & Checkpoint
:::

. . .

## Renv

::: incremental
Renv= renvironment

Gjør at prosjektene blir mer

-   isolert
-   bærbar
-   reproduserbar
:::

. . .

## Laste ned Renv

::: incremental
-   en pakke @renv2023

-   renv::init() i console terminal

-   kun én gang per prosjekt

    ![](images/renv%20console.png){fig-align="center" width="279"}
:::

## Installert i posjektet;

![](images/renv%20installert.png){fig-align="center"}

. . .

## Hva er checkpoint?

::: incremental
-   **Formål** **:** Opprettholde systemets tilstand slik det var på et
    tidspunkt, slik at man kan gjenopprettes til den tilstanden på et
    senere tidspunkt.
-   checkpoint kan også blir brukt til:
    -   feilsøking
    -   datagjennoppretting
    -   sikkerhetskopiering
:::

## Renv **versus Checkpoint**

![](images/renv%20versus%20checkpoint.png){fig-align="center"}

## Konklusjon

::: incremental
-   to ulike pakker med forskjellige formål
-   kan brukes sammen for å forbedre reproduserbarheten

![](images/avslutning.png){fig-align="center" width="521"}
:::

## Referanser
